//#;*****************************************************************************
//#;
//#; Copyright 2012 - 2014 ADVANCED MICRO DEVICES, INC.  All Rights Reserved.
//#;
//#; AMD is granting you permission to use this software (the Materials)
//#; pursuant to the terms and conditions of your Software License Agreement
//#; with AMD.  This header does *NOT* give you permission to use the Materials
//#; or any rights under AMD's intellectual property.  Your use of any portion
//#; of these Materials shall constitute your acceptance of those terms and
//#; conditions.  If you do not agree to the terms and conditions of the Software
//#; License Agreement, please do not use any portion of these Materials.
//#;
//#; CONFIDENTIALITY:  The Materials and all other information, identified as
//#; confidential and provided to you by AMD shall be kept confidential in
//#; accordance with the terms and conditions of the Software License Agreement.
//#;
//#; LIMITATION OF LIABILITY: THE MATERIALS AND ANY OTHER RELATED INFORMATION
//#; PROVIDED TO YOU BY AMD ARE PROVIDED "AS IS" WITHOUT ANY EXPRESS OR IMPLIED
//#; WARRANTY OF ANY KIND, INCLUDING BUT NOT LIMITED TO WARRANTIES OF
//#; MERCHANTABILITY, NONINFRINGEMENT, TITLE, FITNESS FOR ANY PARTICULAR PURPOSE,
//#; OR WARRANTIES ARISING FROM CONDUCT, COURSE OF DEALING, OR USAGE OF TRADE.
//#; IN NO EVENT SHALL AMD OR ITS LICENSORS BE LIABLE FOR ANY DAMAGES WHATSOEVER
//#; (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF PROFITS, BUSINESS
//#; INTERRUPTION, OR LOSS OF INFORMATION) ARISING OUT OF AMD'S NEGLIGENCE,
//#; GROSS NEGLIGENCE, THE USE OF OR INABILITY TO USE THE MATERIALS OR ANY OTHER
//#; RELATED INFORMATION PROVIDED TO YOU BY AMD, EVEN IF AMD HAS BEEN ADVISED OF
//#; THE POSSIBILITY OF SUCH DAMAGES.  BECAUSE SOME JURISDICTIONS PROHIBIT THE
//#; EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES,
//#; THE ABOVE LIMITATION MAY NOT APPLY TO YOU.
//#;
//#; AMD does not assume any responsibility for any errors which may appear in
//#; the Materials or any other related information provided to you by AMD, or
//#; result from use of the Materials or any related information.
//#;
//#; You agree that you will not reverse engineer or decompile the Materials.
//#;
//#; NO SUPPORT OBLIGATION: AMD is not obligated to furnish, support, or make any
//#; further information, software, technical information, know-how, or show-how
//#; available to you.  Additionally, AMD retains the right to modify the
//#; Materials at any time, without notice, and is not obligated to provide such
//#; modified Materials to you.
//#;
//#; U.S. GOVERNMENT RESTRICTED RIGHTS: The Materials are provided with
//#; "RESTRICTED RIGHTS." Use, duplication, or disclosure by the Government is
//#; subject to the restrictions as set forth in FAR 52.227-14 and
//#; DFAR252.227-7013, et seq., or its successor.  Use of the Materials by the
//#; Government constitutes acknowledgement of AMD's proprietary rights in them.
//#;
//#; EXPORT ASSURANCE:  You agree and certify that neither the Materials, nor any
//#; direct product thereof will be exported directly or indirectly, into any
//#; country prohibited by the United States Export Administration Act and the
//#; regulations thereunder, without the required authorization from the U.S.
//#; government nor will be used for any purpose prohibited by the same.
//#;******************************************************************************

#include "AmdCpmOem.h"
#include "AmdCpmOemHiiDxeStrDefs.h"

formset
  guid     = AMD_CPM_SETUP_FORMSET_GUID,
  title    = STRING_TOKEN(STR_AMD_CPM_SETUP_TITLE),
  help     = STRING_TOKEN(STR_AMD_CPM_SETUP_TITLE_HELP),
  class    = AMD_CPM_SETUP_CLASS,
  subclass = AMD_CPM_SETUP_SUB_CLASS,

  //
  // Define a Buffer Storage (EFI_IFR_VARSTORE)
  //
  varstore AMD_CPM_SETUP_OPTION,                          // This is the data structure type
    name  = AMD_CPM_SETUP,                                // Define referenced name in vfr
    guid  = AMD_CPM_SETUP_GUID;                           // GUID of this buffer storage

  form formid = AMD_CPM_SETUP_FORM_ID,                    // Form ID
    title  = STRING_TOKEN(STR_AMD_CPM_SETUP_FORM_TITLE);  // Form title

    oneof
      varid       = AMD_CPM_SETUP.AMD_CPM_SETUP_OPTION_SPECIAL_VGA_FEATURE,
      questionid  = KEY_SPECIAL_VGA_FEATURE,
      prompt      = STRING_TOKEN(STR_SPECIAL_DISPLAY_FEATURES),
      help        = STRING_TOKEN(STR_SPECIAL_DISPLAY_FEATURES_HELP),
      option text = STRING_TOKEN(STR_DISABLED_TEXT),              value = 0, flags = INTERACTIVE | DEFAULT;
      option text = STRING_TOKEN(STR_POWERXPRESS_TEXT),           value = 3, flags = INTERACTIVE;
    endoneof;

    suppressif
      ideqval AMD_CPM_SETUP.AMD_CPM_SETUP_OPTION_SPECIAL_VGA_FEATURE == 0;
      oneof
        varid       = AMD_CPM_SETUP.AMD_CPM_SETUP_OPTION_POWER_XPRESS_DYNAMIC_MODE,
        prompt      = STRING_TOKEN(STR_POWERXPRESS_DYNAMICMODE),
        help        = STRING_TOKEN(STR_POWERXPRESS_DYNAMICMODE_HELP),
        option text = STRING_TOKEN(STR_DISABLED_TEXT),                value = 0, flags = DEFAULT;
        option text = STRING_TOKEN(STR_POWERXPRESS_DYNAMICPOWERDOWN), value = 1, flags = 0;
        option text = STRING_TOKEN(STR_POWERXPRESS_DYNAMICULPS),      value = 2, flags = 0;
      endoneof;
    endif;

    grayoutif
      ideqvallist AMD_CPM_SETUP.AMD_CPM_SETUP_OPTION_SPECIAL_VGA_FEATURE == 1 2 3;
      oneof varid   = AMD_CPM_SETUP.AMD_CPM_SETUP_OPTION_PRIMARY_VIDEO_ADAPTOR,
        prompt      = STRING_TOKEN(STR_PRIMARY_VIDEO_ADAPTOR),
        help        = STRING_TOKEN(STR_PRIMARY_VIDEO_ADAPTOR_HELP),
        option text = STRING_TOKEN(STR_AUTO_TEXT),                value = 0, flags = 0;
        option text = STRING_TOKEN(STR_INTERNAL_GRAPHICS),        value = 1, flags = DEFAULT;
        option text = STRING_TOKEN(STR_EXTERNAL_PCIE_GRAPHICS),   value = 2, flags = 0;
      endoneof;
    endif;

    oneof
      varid       = AMD_CPM_SETUP.AMD_CPM_SETUP_OPTION_LOOPBACK_ADAPTOR,
      prompt      = STRING_TOKEN(STR_POWERXPRESS_LOOPBACK_ADAPTOR),
      help        = STRING_TOKEN(STR_POWERXPRESS_LOOPBACK_ADAPTOR_HELP),
      option text = STRING_TOKEN(STR_NONE_TEXT),                  value = 0, flags =DEFAULT;
      option text = STRING_TOKEN(STR_ENABLED_TEXT),               value = 1, flags = 0;
    endoneof;

    oneof
      varid       = AMD_CPM_SETUP.AMD_CPM_SETUP_OPTION_DISPLAY_OUTPUT,
      questionid  = KEY_DISPLAY_OUTPUT,
      prompt      = STRING_TOKEN(STR_DISPLAY_OUTPUT),
      help        = STRING_TOKEN(STR_DISPLAY_OUTPUT_HELP),
      option text = STRING_TOKEN(STR_DISPLAY_FCH_TEXT),           value = 0, flags = INTERACTIVE|DEFAULT;
      option text = STRING_TOKEN(STR_DISPLAY_MXM_TEXT),           value = 1, flags = INTERACTIVE;
    endoneof;

    oneof
      varid       = AMD_CPM_SETUP.AMD_CPM_SETUP_OPTION_BRIGHTNESS_CONTROL_METHOD,
      prompt      = STRING_TOKEN(STR_BRIGHTNESS_CONTROL),
      help        = STRING_TOKEN(STR_BRIGHTNESS_CONTROL_HELP),
      option text = STRING_TOKEN(STR_BRIGHTNESS_VBIOS_TEXT),      value = 0, flags = DEFAULT;
      option text = STRING_TOKEN(STR_BRIGHTNESS_DRIVER_TEXT),     value = 1, flags = 0;
    endoneof;

    oneof
      varid       = AMD_CPM_SETUP.AMD_CPM_SETUP_OPTION_BLUE_TOOTH_EN,
      prompt      = STRING_TOKEN(STR_BLUETOOTH),
      help        = STRING_TOKEN(STR_BLUETOOTH_HELP),
      option text = STRING_TOKEN(STR_AUTO_TEXT),                  value = 0, flags = DEFAULT;
      option text = STRING_TOKEN(STR_DISABLED_TEXT),              value = 1, flags = 0;
    endoneof;

    oneof
      varid       = AMD_CPM_SETUP.AMD_CPM_SETUP_OPTION_ZERO_POWER_ODD_EN,
      prompt      = STRING_TOKEN(STR_ODD_ZERO_POWER_SUPPORT),
      help        = STRING_TOKEN(STR_ODD_ZERO_POWER_SUPPORT_HELP),
      option text = STRING_TOKEN(STR_DISABLED_TEXT),              value = 0, flags = 0;
      option text = STRING_TOKEN(STR_ENABLED_TEXT),               value = 1, flags = DEFAULT;
      option text = STRING_TOKEN(STR_AUTO_TEXT),                  value = 2, flags = 0;
    endoneof;

    oneof
      varid       = AMD_CPM_SETUP.AMD_CPM_SETUP_OPTION_UNUSED_GPP_CLOCK_OFF,
      prompt      = STRING_TOKEN(STR_UNUSED_GPPCLK_OFF),
      help        = STRING_TOKEN(STR_UNUSED_GPPCLK_OFF_HELP),
      option text = STRING_TOKEN(STR_DISABLED_TEXT),              value = 0, flags = 0;
      option text = STRING_TOKEN(STR_ENABLED_TEXT),               value = 1, flags = DEFAULT;
    endoneof;

    oneof
      varid       = AMD_CPM_SETUP.AMD_CPM_SETUP_OPTION_ACPI_THERMAL_FAN_EN,
      prompt      = STRING_TOKEN(STR_ACPI_THERMAL_CONTROL_FAN),
      help        = STRING_TOKEN(STR_ACPI_THERMAL_CONTROL_FAN_HELP),
      option text = STRING_TOKEN(STR_AUTO_TEXT),                  value = 0, flags = DEFAULT;
      option text = STRING_TOKEN(STR_DISABLED_TEXT),              value = 1, flags = 0;
    endoneof;

    oneof
      varid       = AMD_CPM_SETUP.AMD_CPM_SETUP_OPTION_SYSTEM_BOOT_WITH_PS0,
      prompt      = STRING_TOKEN(STR_SYSTEM_BOOT_WITH_PS0),
      help        = STRING_TOKEN(STR_SYSTEM_BOOT_WITH_PS0_HELP),
      option text = STRING_TOKEN(STR_YES_TEXT),                   value = 0, flags = DEFAULT;
      option text = STRING_TOKEN(STR_NO_TEXT),                    value = 1, flags = 0;
    endoneof;

  endform;

endformset;
