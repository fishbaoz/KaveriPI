/**
 * @file
 *
 * ALIB ASL library
 *
 *
 *
 * @xrefitem bom "File Content Label" "Release Content"
 * @e project:     AGESA
 * @e sub-project: GNB
 * @e \$Revision: 61089 $   @e \$Date: 2011-10-31 10:31:02 -0700 (Mon, 31 Oct 2011) $
 *
 */
/*
*****************************************************************************
*
* Copyright 2008 - 2014 ADVANCED MICRO DEVICES, INC.  All Rights Reserved.
*
* AMD is granting you permission to use this software (the Materials)
* pursuant to the terms and conditions of your Software License Agreement
* with AMD.  This header does *NOT* give you permission to use the Materials
* or any rights under AMD's intellectual property.  Your use of any portion
* of these Materials shall constitute your acceptance of those terms and
* conditions.  If you do not agree to the terms and conditions of the Software
* License Agreement, please do not use any portion of these Materials.
*
* CONFIDENTIALITY:  The Materials and all other information, identified as
* confidential and provided to you by AMD shall be kept confidential in
* accordance with the terms and conditions of the Software License Agreement.
*
* LIMITATION OF LIABILITY: THE MATERIALS AND ANY OTHER RELATED INFORMATION
* PROVIDED TO YOU BY AMD ARE PROVIDED "AS IS" WITHOUT ANY EXPRESS OR IMPLIED
* WARRANTY OF ANY KIND, INCLUDING BUT NOT LIMITED TO WARRANTIES OF
* MERCHANTABILITY, NONINFRINGEMENT, TITLE, FITNESS FOR ANY PARTICULAR PURPOSE,
* OR WARRANTIES ARISING FROM CONDUCT, COURSE OF DEALING, OR USAGE OF TRADE.
* IN NO EVENT SHALL AMD OR ITS LICENSORS BE LIABLE FOR ANY DAMAGES WHATSOEVER
* (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF PROFITS, BUSINESS
* INTERRUPTION, OR LOSS OF INFORMATION) ARISING OUT OF AMD'S NEGLIGENCE,
* GROSS NEGLIGENCE, THE USE OF OR INABILITY TO USE THE MATERIALS OR ANY OTHER
* RELATED INFORMATION PROVIDED TO YOU BY AMD, EVEN IF AMD HAS BEEN ADVISED OF
* THE POSSIBILITY OF SUCH DAMAGES.  BECAUSE SOME JURISDICTIONS PROHIBIT THE
* EXCLUSION OR LIMITATION OF LIABILITY FOR CONSEQUENTIAL OR INCIDENTAL DAMAGES,
* THE ABOVE LIMITATION MAY NOT APPLY TO YOU.
*
* AMD does not assume any responsibility for any errors which may appear in
* the Materials or any other related information provided to you by AMD, or
* result from use of the Materials or any related information.
*
* You agree that you will not reverse engineer or decompile the Materials.
*
* NO SUPPORT OBLIGATION: AMD is not obligated to furnish, support, or make any
* further information, software, technical information, know-how, or show-how
* available to you.  Additionally, AMD retains the right to modify the
* Materials at any time, without notice, and is not obligated to provide such
* modified Materials to you.
*
* U.S. GOVERNMENT RESTRICTED RIGHTS: The Materials are provided with
* "RESTRICTED RIGHTS." Use, duplication, or disclosure by the Government is
* subject to the restrictions as set forth in FAR 52.227-14 and
* DFAR252.227-7013, et seq., or its successor.  Use of the Materials by the
* Government constitutes acknowledgement of AMD's proprietary rights in them.
*
* EXPORT ASSURANCE:  You agree and certify that neither the Materials, nor any
* direct product thereof will be exported directly or indirectly, into any
* country prohibited by the United States Export Administration Act and the
* regulations thereunder, without the required authorization from the U.S.
* government nor will be used for any purpose prohibited by the same.
* ***************************************************************************
*
*/

  /*----------------------------------------------------------------------------------------*/
  /**
   *  Set PCIe VID
   *
   *  Arg0 - PCIe link speed
   *
   */

  Method (procGnbSetPcieVid, 1) {
    ALIB_DEBUG (Concatenate (" PCIe VID :", ToHexString (Arg0), ADBG))
    if (LEqual (Arg0, GEN1)) {
      Store (PcieVidGen1, local0)
    }
    if (LEqual (Arg0, GEN2)) {
      Store (PcieVidGen2, local0)
    }
    if (LEqual (Arg0, GEN3)) {
      Store (PcieVidGen3, local0)
    }

    // translate Vid code to millivolt with two fraction bits.
    if (LGreater (local0, 0xF7)) {
      Store (0xF7, local0)
    }

    // Equation: VID code increase/decrease 1, there is one 6.25mv change.
    //           6.25mv could be described using integer 625 with two fraction bits.
    // Millivolt = (0xF7 - Vid + 1) * 625
    Store (Multiply (625, Add (Subtract(0xF7, local0, local1), 1)), local2)

    // SmuMillivolt value = Millivolt * 4 / 100.
    Divide (Multiply (local2, 4, local2), 100, local3, local4)

    // Send msg to smu services to apply voltage change.
    procGnbSmuServiceReq (58, local4)
  }

  /*----------------------------------------------------------------------------------------*/
  /**
   *  PHY lane power up/down
   *
   *  Arg0 - ON/OFF
   *  Arg1 - Start Lane
   *  Arg2 - Stop Lane
   *  Arg3 - Link speed
   */

  Method (procGnbSmuPciePhyLanePowerControl, 4) {

    ALIB_DEBUG (Concatenate ("  PortSpd = ", ToHexString (Arg3), ADBG))

    if (LGreater (Arg1, Arg2)) {
      Store (Arg2, bfLowerLaneID)
      Store (Arg1, bfUpperLaneID)
    } else {
      Store (Arg1, bfLowerLaneID)
      Store (Arg2, bfUpperLaneID)
    }

    if (LEqual (bfLowerLaneID, 16)) {
      if (LEqual (Arg3, 3)) {
        Store (0, bfRx)
      } else {
        Store (1, bfRx)
      }
    } else {
      Store (1,  bfRx)
    }

    Store (1,  bfTx)
    Store (0,  bfCore)
    if (LEqual (Arg0, ON)) {
      Store (3, Local0)
    } else {
      Store (2, Local0)
    }
    Store (bfPowerGate, Local1)

    procGnbSmuServiceReq (Local0, Local1)
  }
